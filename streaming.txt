

class WelcomeController < ApplicationController
  include ActionController::Live
    
  def ticker
    5.times do
      response.stream.write "hi <br/>"
      sleep 2
    end
    response.stream.close
  end
end

get 'welcome/ticker'
  
http://localhost:3001/welcome/ticker

data: {"time":"2016-05-25 15:47:50 -0700"}
data: {"time":"2016-05-25 15:47:52 -0700"}
data: {"time":"2016-05-25 15:47:54 -0700"}
data: {"time":"2016-05-25 15:47:56 -0700"}
data: {"time":"2016-05-25 15:47:58 -0700"}


require 'json'

module  Ticker
  class SSE
    def initialize(io)
      @io = io
    end 
    
    def write(object, options = {})
      options.each do |k,v|
        @io.write("#{k}: #{v}\n")
      end
      @io.write("data: #{JSON.dump(object)}\n\n")
    end
    
    def close
      @io.close
    end
  end
end

in lib/ticker/sse.rb


  def ticker
    response.headers['Content-Type'] = 'text/event-stream'
    sse = Ticker::SSE.new(response.stream)
    begin
      loop do
        sse.write({ time: Time.now })
        sleep 2
      end
    rescue IOError
      logger.info 'Client disconnects causes IOError on write'
    ensure
      sse.close
    end
  end

localhost:3001/welcome/ticker

data: {"time":"2016-05-25 15:47:50 -0700"}
data: {"time":"2016-05-25 15:47:52 -0700"}
data: {"time":"2016-05-25 15:47:54 -0700"}
data: {"time":"2016-05-25 15:47:56 -0700"}
data: {"time":"2016-05-25 15:47:58 -0700"}


  def ticker
    response.headers['Content-Type'] = 'text/event-stream'
    sse = Ticker::SSE.new(response.stream)
    begin
      loop do
        quotes = [410, 411, 415, 413, 414, 420]
        sse.write({ SRV:  quotes.sample})
        sleep 2
      end
    rescue IOError
      logger.info 'Client disconnects causes IOError on write'
    ensure
      sse.close
    end
  end

data: {"SRV":414}
data: {"SRV":414}
data: {"SRV":415}
data: {"SRV":414}
data: {"SRV":413}
data: {"SRV":410}


http://tenderlovemaking.com/2012/07/30/is-it-live.html